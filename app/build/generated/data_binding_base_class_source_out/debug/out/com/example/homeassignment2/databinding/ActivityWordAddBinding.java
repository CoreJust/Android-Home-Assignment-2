// Generated by view binder compiler. Do not edit!
package com.example.homeassignment2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.homeassignment2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWordAddBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final EditText definitionEditText;

  @NonNull
  public final EditText examplesEditText;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final EditText nameEditText;

  @NonNull
  public final EditText originEditText;

  @NonNull
  public final Spinner partOfSpeechSpinner;

  @NonNull
  public final EditText transcriptionEditText;

  @NonNull
  public final EditText translationsEditText;

  @NonNull
  public final TextView wordAddHeaderView;

  private ActivityWordAddBinding(@NonNull LinearLayout rootView, @NonNull Button cancelButton,
      @NonNull Button confirmButton, @NonNull EditText definitionEditText,
      @NonNull EditText examplesEditText, @NonNull LinearLayout main,
      @NonNull EditText nameEditText, @NonNull EditText originEditText,
      @NonNull Spinner partOfSpeechSpinner, @NonNull EditText transcriptionEditText,
      @NonNull EditText translationsEditText, @NonNull TextView wordAddHeaderView) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.confirmButton = confirmButton;
    this.definitionEditText = definitionEditText;
    this.examplesEditText = examplesEditText;
    this.main = main;
    this.nameEditText = nameEditText;
    this.originEditText = originEditText;
    this.partOfSpeechSpinner = partOfSpeechSpinner;
    this.transcriptionEditText = transcriptionEditText;
    this.translationsEditText = translationsEditText;
    this.wordAddHeaderView = wordAddHeaderView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWordAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWordAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_word_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWordAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.confirmButton;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.definitionEditText;
      EditText definitionEditText = ViewBindings.findChildViewById(rootView, id);
      if (definitionEditText == null) {
        break missingId;
      }

      id = R.id.examplesEditText;
      EditText examplesEditText = ViewBindings.findChildViewById(rootView, id);
      if (examplesEditText == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.nameEditText;
      EditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.originEditText;
      EditText originEditText = ViewBindings.findChildViewById(rootView, id);
      if (originEditText == null) {
        break missingId;
      }

      id = R.id.partOfSpeechSpinner;
      Spinner partOfSpeechSpinner = ViewBindings.findChildViewById(rootView, id);
      if (partOfSpeechSpinner == null) {
        break missingId;
      }

      id = R.id.transcriptionEditText;
      EditText transcriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (transcriptionEditText == null) {
        break missingId;
      }

      id = R.id.translationsEditText;
      EditText translationsEditText = ViewBindings.findChildViewById(rootView, id);
      if (translationsEditText == null) {
        break missingId;
      }

      id = R.id.wordAddHeaderView;
      TextView wordAddHeaderView = ViewBindings.findChildViewById(rootView, id);
      if (wordAddHeaderView == null) {
        break missingId;
      }

      return new ActivityWordAddBinding((LinearLayout) rootView, cancelButton, confirmButton,
          definitionEditText, examplesEditText, main, nameEditText, originEditText,
          partOfSpeechSpinner, transcriptionEditText, translationsEditText, wordAddHeaderView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
